[{"id":"f3217084.ba5da8","type":"debug","z":"8e0aed7c.7349b","name":"Debug","active":true,"console":"false","complete":"payload","x":690,"y":260,"wires":[]},{"id":"3dc80ef9.d63fb2","type":"comment","z":"8e0aed7c.7349b","name":"Event Filtering","info":"Configure the 'Listen for State Changes' and 'Post\nto IoT-BC' nodes to filter state change events into \nthe Blockchain from an IoT device registered in the \nWatson IoT Platform.","x":150,"y":180,"wires":[]},{"id":"6b698c7.3aba0f4","type":"http request","z":"8e0aed7c.7349b","name":"POST to IoT-BC","method":"POST","ret":"txt","url":"https://iot-blockchain.ibm.com/api/v1/<org>/tx/<deviceType>/UNUSED/<event_id>","tls":"","x":720,"y":340,"wires":[[]]},{"id":"492c4942.ac1348","type":"mqtt in","z":"8e0aed7c.7349b","name":"Listen for State Changes","topic":"iot-2/type/<device_type>/id/<device_id>/intf/<alias>/evt/state","qos":"0","broker":"a93339c8.0fe52","x":190,"y":260,"wires":[["5b10f4e2.65d7a4"]]},{"id":"5b10f4e2.65d7a4","type":"function","z":"8e0aed7c.7349b","name":"class to $class","func":"// Replace \"class\" with \"$class\" needed for \n// Composer, since $class is not allowed by IoTP.\nvar str = JSON.stringify(msg.payload);\nvar res = str.replace(\"class\", \"$class\");\nvar a = JSON.parse(res);\n\n// Obtain state payload for iot blockchain transaction\nvar b = JSON.parse(a);\nmsg.payload = b.state;\nreturn msg;","outputs":1,"noerr":0,"x":480,"y":260,"wires":[["f3217084.ba5da8","6b698c7.3aba0f4"]]},{"id":"a93339c8.0fe52","type":"mqtt-broker","z":"","name":"","broker":"<org>.messaging.internetofthings.ibmcloud.com","port":"8883","tls":"","clientid":"a:<org>:NodeRedMQTTListener","usetls":true,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]
